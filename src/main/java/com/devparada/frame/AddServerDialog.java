/*
 * This file is part of StatusMCServerTool.
 *
 * StatusMCServerTool is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * StatusMCServerTool is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with StatusMCServerTool. If not, see <https://www.gnu.org/licenses/>.
 */
package com.devparada.frame;

import javax.swing.JOptionPane;

/**
 *
 * @author devparada
 */
public class AddServerDialog extends javax.swing.JDialog {

    private final InitFrame jFrame;

    /**
     * Saves the host and ip of dialog
     */
    private String HostIpDialog;

    /**
     * Creates new form AddServerDialog
     *
     * @param parent
     * @param modal
     */
    public AddServerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jFrame = (InitFrame) parent;
    }

    public String getHostIpDialog() {
        return HostIpDialog;
    }

    public void setHostIpDialog(String HostIpDialog) {
        this.HostIpDialog = HostIpDialog;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlDlgAdd = new javax.swing.JPanel();
        jPnlText = new javax.swing.JPanel();
        jLblAdd = new javax.swing.JTextField();
        jTxtAdd = new javax.swing.JTextField();
        jPnlButton = new javax.swing.JPanel();
        jBtnAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Server");
        setBackground(new java.awt.Color(27, 38, 59));
        setLocation(new java.awt.Point(0, 0));
        setPreferredSize(new java.awt.Dimension(300, 200));
        setResizable(false);

        jPnlDlgAdd.setBackground(new java.awt.Color(27, 38, 59));
        jPnlDlgAdd.setLayout(new javax.swing.BoxLayout(jPnlDlgAdd, javax.swing.BoxLayout.Y_AXIS));

        jPnlText.setBackground(new java.awt.Color(27, 38, 59));

        jLblAdd.setEditable(false);
        jLblAdd.setBackground(new java.awt.Color(27, 38, 59));
        jLblAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jLblAdd.setText("Introduce the server IP (with port if different)");
        jLblAdd.setBorder(null);
        jLblAdd.setPreferredSize(new java.awt.Dimension(10, 10));

        jTxtAdd.setBackground(new java.awt.Color(27, 38, 59));
        jTxtAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxtAdd.setText("myserverminecraft.ddns.net:24321");
        jTxtAdd.setMargin(null);
        jTxtAdd.setPreferredSize(new java.awt.Dimension(10, 10));

        javax.swing.GroupLayout jPnlTextLayout = new javax.swing.GroupLayout(jPnlText);
        jPnlText.setLayout(jPnlTextLayout);
        jPnlTextLayout.setHorizontalGroup(
            jPnlTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPnlTextLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPnlTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTxtAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                    .addComponent(jLblAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPnlTextLayout.setVerticalGroup(
            jPnlTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlTextLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLblAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jTxtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPnlDlgAdd.add(jPnlText);

        jPnlButton.setBackground(new java.awt.Color(27, 38, 59));

        jBtnAdd.setBackground(new java.awt.Color(0, 204, 51));
        jBtnAdd.setForeground(new java.awt.Color(27, 38, 59));
        jBtnAdd.setText("Add server");
        jBtnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBtnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnAdd.setMargin(new java.awt.Insets(2, 40, 2, 40));
        jBtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPnlButtonLayout = new javax.swing.GroupLayout(jPnlButton);
        jPnlButton.setLayout(jPnlButtonLayout);
        jPnlButtonLayout.setHorizontalGroup(
            jPnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnlButtonLayout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addComponent(jBtnAdd)
                .addContainerGap(91, Short.MAX_VALUE))
        );
        jPnlButtonLayout.setVerticalGroup(
            jPnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlButtonLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jBtnAdd)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jPnlDlgAdd.add(jPnlButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPnlDlgAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPnlDlgAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddActionPerformed
        this.setHostIpDialog(jTxtAdd.getText());

        if (checkAddDialog()) {
            String[] ipServerArray = getHostIpDialog().split(":");
            int port = 25565;

            String serverIp = getHostIpDialog();
            jTxtAdd.setText("");

            if (ipServerArray.length == 2) {
                port = Integer.parseInt(ipServerArray[1]);
            } else {
                serverIp = getHostIpDialog() + ":" + port;
            }

            this.setVisible(false);
            jFrame.database.addRow(serverIp);
            jFrame.addPanel(ipServerArray[0], port);
        } else {
            this.setVisible(true);
        }
    }//GEN-LAST:event_jBtnAddActionPerformed

    /**
     * Check the JTextField the dialog of dialog add server of the database
     *
     * @return Return true if checks are correct
     */
    private boolean checkAddDialog() {
        String JTxtText = getHostIpDialog();

        if (JTxtText.length() != 0) {
            String[] ipServerArray = JTxtText.split(":");

            // \\d+ -> only numbers 
            if (ipServerArray.length == 2 && !ipServerArray[1].matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Port not is number", "Error Add Server", JOptionPane.WARNING_MESSAGE);
            } else if (ipServerArray.length == 2 && ipServerArray[1].matches("\\d+")) {
                return true;
            } else {
                return true;
            }
        } else {
            JOptionPane.showMessageDialog(this, "IP Server not blank", "Error Add Server", JOptionPane.WARNING_MESSAGE);
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAdd;
    private javax.swing.JTextField jLblAdd;
    private javax.swing.JPanel jPnlButton;
    private javax.swing.JPanel jPnlDlgAdd;
    private javax.swing.JPanel jPnlText;
    private javax.swing.JTextField jTxtAdd;
    // End of variables declaration//GEN-END:variables
}
